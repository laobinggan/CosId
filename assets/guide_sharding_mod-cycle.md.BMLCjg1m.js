import{_ as t}from"./chunks/CosIdModShardingAlgorithm.C3axxDov.js";import{_ as e,a}from"./chunks/Throughput-Of-ModShardingAlgorithm-RangeShardingValue.hON43kCG.js";import{_ as r,c as o,o as d,a3 as i}from"./chunks/framework.BsqFfzsZ.js";const y=JSON.parse('{"title":"取模分片算法","description":"","frontmatter":{},"headers":[],"relativePath":"guide/sharding/mod-cycle.md","filePath":"guide/sharding/mod-cycle.md","lastUpdated":1719104899000}'),s={name:"guide/sharding/mod-cycle.md"},n=i('<h1 id="取模分片算法" tabindex="-1">取模分片算法 <a class="header-anchor" href="#取模分片算法" aria-label="Permalink to &quot;取模分片算法&quot;">​</a></h1><p align="center"><img src="'+t+'" alt="CosIdModShardingAlgorithm"></p><ul><li>算法复杂度：O(1)</li><li>性能 : 相比于 <code>org.apache.shardingsphere.sharding.algorithm.sharding.mod.ModShardingAlgorithm</code> 性能高出 <em>1200~4000</em> 倍。并且稳定性更高，不会出现严重的性能退化。</li></ul><table tabindex="0"><thead><tr><th><strong>PreciseShardingValue</strong></th><th><strong>RangeShardingValue</strong></th></tr></thead><tbody><tr><td><img src="'+e+'"></td><td><img src="'+a+'"></td></tr></tbody></table>',4),c=[n];function _(l,h,m,g,p,u){return d(),o("div",null,c)}const P=r(s,[["render",_]]);export{y as __pageData,P as default};
